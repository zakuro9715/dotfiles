// 既定値を上書きするには、このファイル内にキー バインドを挿入します
[
	{
		"key": "ctrl+enter",
		"command": "git.stage",
		"when": "scmProvider == 'git' && scmResourceGroup == 'workingTree'"
	},
	{
		"key": "ctrl+enter",
		"command": "git.diff.stageHunk",
		"when": "diffEditorOriginalUri =~ /^git\\:.*%22ref%22%3A%22~%22%7D$/"
	},
	{
		"key": "ctrl+enter",
		"command": "git.stageSelectedRanges",
		"when": "editorTextFocus && !operationInProgress && resourceScheme == 'file'"
	},
	{
		"key": "ctrl+k ctrl+alt+s",
		"command": "-git.stageSelectedRanges",
		"when": "editorTextFocus && !operationInProgress && resourceScheme == 'file'"
	},
	{
		"key": "ctrl+backspace",
		"command": "git.unstageSelectedRanges",
		"when": "editorTextFocus && isInDiffEditor && isInDiffRightEditor && !operationInProgress && resourceScheme == 'git'"
	},
	{
		"key": "ctrl+k ctrl+n",
		"command": "-git.unstageSelectedRanges",
		"when": "editorTextFocus && isInDiffEditor && isInDiffRightEditor && !operationInProgress && resourceScheme == 'git'"
	},
	{
		"key": "ctrl+p",
		"command": "-extension.vim_ctrl+p",
		"when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
	},
	{
		"key": "ctrl+i",
		"command": "-cloudcode.duetAI.showinEditor",
		"when": "authLoggedIn && config.geminicodeassist.enable && editorTextFocus && shouldRegisterInEditorCommand && !inGeminiDiffView && !isInDiffEditor"
	},
	{
		"key": "ctrl+i",
		"command": "-extension.vim_ctrl+i",
		"when": "editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"
	},
	{
		"key": "ctrl+i ctrl+i",
		"command": "-v.fmt"
	},
	{
		"key": "tab",
		"command": "-extension.vim_tab",
		"when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
	},
	{
		"key": "shift+tab",
		"command": "-extension.vim_shift+tab",
		"when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
	},

	/* copilot NES and vim integration */
	// https://github.com/VSCodeVim/Vim/issues/9459#issuecomment-2648156285
	{
    "key": "escape",
    "command": "-extension.vim_escape",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "escape",
    "command": "extension.vim_escape",
    "when": "editorTextFocus && vim.active && !inDebugRepl && !testing.isPeekVisible && !testing.isInPeek && (vim.mode == 'Insert' || !notebookEditorFocused) && !inlineEditIsVisible && !suggestWidgetVisible && !findWidgetVisible && !dirtyDiffVisible"
  },
  {
    "key": "escape",
    "command": "runCommands",
    "when": "vim.mode == 'Insert' && inlineEditIsVisible",
    "args": {
      "commands": [
        "editor.action.inlineSuggest.hide",
        "extension.vim_escape"
      ]
    }
  },
  {
    "key": "escape",
    "command": "runCommands",
    "when": "vim.mode == 'Insert' && suggestWidgetVisible",
    "args": {
      "commands": [
        "hideSuggestWidget",
        "extension.vim_escape"
      ]
    }
  },
  {
    "key": "escape",
    "command": "-hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "escape",
    "command": "hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus && !vim.active"
  }
	/* ---- */
]
